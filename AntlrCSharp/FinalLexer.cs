//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Final.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class FinalLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		CON=1, EQU=2, IF=3, ELIF=4, ELSE=5, END=6, NEWLINE=7, WHITE=8, WS=9, EQUALS=10, 
		ARITHMETIC=11, INTEGER=12, BOOLEAN=13, FLOATS=14, STRING=15, ID=16;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "CON", "EQU", "IF", "ELIF", "ELSE", "END", "NEWLINE", 
		"WHITE", "WS", "EQUALS", "ARITHMETIC", "INTEGER", "BOOLEAN", "FLOATS", 
		"STRING", "ID"
	};


	public FinalLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FinalLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "CON", "EQU", "IF", "ELIF", "ELSE", "END", "NEWLINE", "WHITE", "WS", 
		"EQUALS", "ARITHMETIC", "INTEGER", "BOOLEAN", "FLOATS", "STRING", "ID"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Final.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static FinalLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x12', '\x9F', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x5', '\x4', '\x34', '\n', '\x4', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x5', '\x5', '@', '\n', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x6', '\n', 'R', '\n', '\n', '\r', '\n', '\xE', 
		'\n', 'S', '\x3', '\v', '\x6', '\v', 'W', '\n', '\v', '\r', '\v', '\xE', 
		'\v', 'X', '\x3', '\f', '\x6', '\f', '\\', '\n', '\f', '\r', '\f', '\xE', 
		'\f', ']', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x5', '\xF', 'g', '\n', '\xF', '\x3', 
		'\xF', '\x6', '\xF', 'j', '\n', '\xF', '\r', '\xF', '\xE', '\xF', 'k', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x5', '\x10', '\x80', '\n', 
		'\x10', '\x3', '\x11', '\x5', '\x11', '\x83', '\n', '\x11', '\x3', '\x11', 
		'\a', '\x11', '\x86', '\n', '\x11', '\f', '\x11', '\xE', '\x11', '\x89', 
		'\v', '\x11', '\x3', '\x11', '\x3', '\x11', '\x6', '\x11', '\x8D', '\n', 
		'\x11', '\r', '\x11', '\xE', '\x11', '\x8E', '\x3', '\x12', '\x3', '\x12', 
		'\a', '\x12', '\x93', '\n', '\x12', '\f', '\x12', '\xE', '\x12', '\x96', 
		'\v', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', 
		'\x6', '\x13', '\x9C', '\n', '\x13', '\r', '\x13', '\xE', '\x13', '\x9D', 
		'\x3', '\x94', '\x2', '\x14', '\x3', '\x2', '\x5', '\x2', '\a', '\x3', 
		'\t', '\x4', '\v', '\x5', '\r', '\x6', '\xF', '\a', '\x11', '\b', '\x13', 
		'\t', '\x15', '\n', '\x17', '\v', '\x19', '\f', '\x1B', '\r', '\x1D', 
		'\xE', '\x1F', '\xF', '!', '\x10', '#', '\x11', '%', '\x12', '\x3', '\x2', 
		'\t', '\x3', '\x2', '\x63', '|', '\x3', '\x2', '\x43', '\\', '\x4', '\x2', 
		'\f', '\f', '\xF', '\xF', '\x3', '\x2', '\v', '\v', '\x3', '\x2', '\"', 
		'\"', '\x6', '\x2', '\'', '\'', ',', '-', '/', '/', '\x31', '\x31', '\x3', 
		'\x2', '\x32', ';', '\x2', '\xB1', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x3', '\'', '\x3', '\x2', 
		'\x2', '\x2', '\x5', ')', '\x3', '\x2', '\x2', '\x2', '\a', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\t', '?', '\x3', '\x2', '\x2', '\x2', '\v', '\x41', 
		'\x3', '\x2', '\x2', '\x2', '\r', '\x44', '\x3', '\x2', '\x2', '\x2', 
		'\xF', 'I', '\x3', '\x2', '\x2', '\x2', '\x11', 'N', '\x3', '\x2', '\x2', 
		'\x2', '\x13', 'Q', '\x3', '\x2', '\x2', '\x2', '\x15', 'V', '\x3', '\x2', 
		'\x2', '\x2', '\x17', '[', '\x3', '\x2', '\x2', '\x2', '\x19', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '\x1B', '\x63', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', '\x66', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x7F', '\x3', '\x2', 
		'\x2', '\x2', '!', '\x82', '\x3', '\x2', '\x2', '\x2', '#', '\x90', '\x3', 
		'\x2', '\x2', '\x2', '%', '\x9B', '\x3', '\x2', '\x2', '\x2', '\'', '(', 
		'\t', '\x2', '\x2', '\x2', '(', '\x4', '\x3', '\x2', '\x2', '\x2', ')', 
		'*', '\t', '\x3', '\x2', '\x2', '*', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'+', ',', '\a', '\x63', '\x2', '\x2', ',', '-', '\a', 'p', '\x2', '\x2', 
		'-', '\x34', '\a', '\x66', '\x2', '\x2', '.', '/', '\a', 'q', '\x2', '\x2', 
		'/', '\x34', '\a', 't', '\x2', '\x2', '\x30', '\x31', '\a', 'p', '\x2', 
		'\x2', '\x31', '\x32', '\a', 'q', '\x2', '\x2', '\x32', '\x34', '\a', 
		'v', '\x2', '\x2', '\x33', '+', '\x3', '\x2', '\x2', '\x2', '\x33', '.', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x34', '\b', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', '?', '\x2', 
		'\x2', '\x36', '@', '\a', '?', '\x2', '\x2', '\x37', '\x38', '\a', '#', 
		'\x2', '\x2', '\x38', '@', '\a', '?', '\x2', '\x2', '\x39', '@', '\a', 
		'>', '\x2', '\x2', ':', ';', '\a', '>', '\x2', '\x2', ';', '@', '\a', 
		'?', '\x2', '\x2', '<', '@', '\a', '@', '\x2', '\x2', '=', '>', '\a', 
		'@', '\x2', '\x2', '>', '@', '\a', '?', '\x2', '\x2', '?', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '?', '\x37', '\x3', '\x2', '\x2', '\x2', '?', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '?', ':', '\x3', '\x2', '\x2', '\x2', '?', 
		'<', '\x3', '\x2', '\x2', '\x2', '?', '=', '\x3', '\x2', '\x2', '\x2', 
		'@', '\n', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', 'k', '\x2', 
		'\x2', '\x42', '\x43', '\a', 'h', '\x2', '\x2', '\x43', '\f', '\x3', '\x2', 
		'\x2', '\x2', '\x44', '\x45', '\a', 'g', '\x2', '\x2', '\x45', '\x46', 
		'\a', 'n', '\x2', '\x2', '\x46', 'G', '\a', 'k', '\x2', '\x2', 'G', 'H', 
		'\a', 'h', '\x2', '\x2', 'H', '\xE', '\x3', '\x2', '\x2', '\x2', 'I', 
		'J', '\a', 'g', '\x2', '\x2', 'J', 'K', '\a', 'n', '\x2', '\x2', 'K', 
		'L', '\a', 'u', '\x2', '\x2', 'L', 'M', '\a', 'g', '\x2', '\x2', 'M', 
		'\x10', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', '<', '\x2', '\x2', 
		'O', '\x12', '\x3', '\x2', '\x2', '\x2', 'P', 'R', '\t', '\x4', '\x2', 
		'\x2', 'Q', 'P', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'Q', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\x3', '\x2', '\x2', 
		'\x2', 'T', '\x14', '\x3', '\x2', '\x2', '\x2', 'U', 'W', '\t', '\x5', 
		'\x2', '\x2', 'V', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', 
		'\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', 
		'\x2', '\x2', 'Y', '\x16', '\x3', '\x2', '\x2', '\x2', 'Z', '\\', '\t', 
		'\x6', '\x2', '\x2', '[', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', ']', 
		'\x3', '\x2', '\x2', '\x2', ']', '[', '\x3', '\x2', '\x2', '\x2', ']', 
		'^', '\x3', '\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', '\x2', '\x2', 
		'_', '`', '\b', '\f', '\x2', '\x2', '`', '\x18', '\x3', '\x2', '\x2', 
		'\x2', '\x61', '\x62', '\a', '?', '\x2', '\x2', '\x62', '\x1A', '\x3', 
		'\x2', '\x2', '\x2', '\x63', '\x64', '\t', '\a', '\x2', '\x2', '\x64', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\x65', 'g', '\a', '/', '\x2', '\x2', 
		'\x66', '\x65', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\x3', '\x2', 
		'\x2', '\x2', 'g', 'i', '\x3', '\x2', '\x2', '\x2', 'h', 'j', '\t', '\b', 
		'\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\x3', '\x2', 
		'\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\x3', '\x2', 
		'\x2', '\x2', 'l', '\x1E', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\a', 
		'V', '\x2', '\x2', 'n', 'o', '\a', 't', '\x2', '\x2', 'o', 'p', '\a', 
		'w', '\x2', '\x2', 'p', '\x80', '\a', 'g', '\x2', '\x2', 'q', 'r', '\a', 
		'v', '\x2', '\x2', 'r', 's', '\a', 't', '\x2', '\x2', 's', 't', '\a', 
		'w', '\x2', '\x2', 't', '\x80', '\a', 'g', '\x2', '\x2', 'u', 'v', '\a', 
		'H', '\x2', '\x2', 'v', 'w', '\a', '\x63', '\x2', '\x2', 'w', 'x', '\a', 
		'n', '\x2', '\x2', 'x', 'y', '\a', 'u', '\x2', '\x2', 'y', '\x80', '\a', 
		'g', '\x2', '\x2', 'z', '{', '\a', 'h', '\x2', '\x2', '{', '|', '\a', 
		'\x63', '\x2', '\x2', '|', '}', '\a', 'n', '\x2', '\x2', '}', '~', '\a', 
		'u', '\x2', '\x2', '~', '\x80', '\a', 'g', '\x2', '\x2', '\x7F', 'm', 
		'\x3', '\x2', '\x2', '\x2', '\x7F', 'q', '\x3', '\x2', '\x2', '\x2', '\x7F', 
		'u', '\x3', '\x2', '\x2', '\x2', '\x7F', 'z', '\x3', '\x2', '\x2', '\x2', 
		'\x80', ' ', '\x3', '\x2', '\x2', '\x2', '\x81', '\x83', '\a', '/', '\x2', 
		'\x2', '\x82', '\x81', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\x3', 
		'\x2', '\x2', '\x2', '\x83', '\x87', '\x3', '\x2', '\x2', '\x2', '\x84', 
		'\x86', '\t', '\b', '\x2', '\x2', '\x85', '\x84', '\x3', '\x2', '\x2', 
		'\x2', '\x86', '\x89', '\x3', '\x2', '\x2', '\x2', '\x87', '\x85', '\x3', 
		'\x2', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', '\x2', '\x88', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x89', '\x87', '\x3', '\x2', '\x2', 
		'\x2', '\x8A', '\x8C', '\a', '\x30', '\x2', '\x2', '\x8B', '\x8D', '\t', 
		'\b', '\x2', '\x2', '\x8C', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\x90', '\x94', '\a', '$', '\x2', '\x2', '\x91', 
		'\x93', '\v', '\x2', '\x2', '\x2', '\x92', '\x91', '\x3', '\x2', '\x2', 
		'\x2', '\x93', '\x96', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x95', 
		'\x97', '\x3', '\x2', '\x2', '\x2', '\x96', '\x94', '\x3', '\x2', '\x2', 
		'\x2', '\x97', '\x98', '\a', '$', '\x2', '\x2', '\x98', '$', '\x3', '\x2', 
		'\x2', '\x2', '\x99', '\x9C', '\x5', '\x3', '\x2', '\x2', '\x9A', '\x9C', 
		'\x5', '\x5', '\x3', '\x2', '\x9B', '\x99', '\x3', '\x2', '\x2', '\x2', 
		'\x9B', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\x3', '\x2', 
		'\x2', '\x2', '\x9D', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', 
		'\x3', '\x2', '\x2', '\x2', '\x9E', '&', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'\x2', '\x33', '?', 'S', 'X', ']', '\x66', 'k', '\x7F', '\x82', '\x87', 
		'\x8E', '\x94', '\x9B', '\x9D', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
